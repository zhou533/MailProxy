<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
       default-autowire="byName" default-lazy-init="true">

    <!-- 本地加载properties环境  -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:/env/dohko.properties</value>
        </property>
    </bean>

    <!-- jedis pool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="512" /><!-- 最大的活跃连接的数量 -->
        <property name="maxIdle" value="64" /><!-- 最大的闲置连接的数量,当大于最大的闲置数量时，会被连接池主动销毁 -->
        <property name="minIdle" value="16" /><!-- 最小的闲置连接的数量,当连接池中小于最小的闲置数量时，会创建新的连接对象 -->
        <property name="maxWait" value="1000" />
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="false" />
        <property name="whenExhaustedAction" value="0" /> <!-- 当client想连接池请求连接时，没有可用的对象时，连接池采用的策略,2表示WHEN_EXHAUSTED_GROW，表明当连接耗尽时，池会主动create一个新的连接-->
    </bean>

    <!-- 链接榜单信息redis配置 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${env.redis.host}" />
        <constructor-arg index="2" value="${env.redis.port}" />
    </bean>
</beans>